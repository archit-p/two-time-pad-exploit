import codecs
import re

msgs = []
threshold = 2

# open file and take ciphertexts as input
filename = "ciphers.txt"
try:
	with open(filename, 'r') as f:
		for line in f:
			line = line.strip()
			msgs.append(codecs.decode(line, 'hex'))
except:
	print(filename + ' not found')
	exit()

try:
	target_name = "target.txt"
	with open(target_name, 'r') as f:
		for line in f:
			line = line.strip()
			target = codecs.decode(line, 'hex')
except:
	print(target_name + ' not found')

key = [0] * 1024

def axorb(a, b):
	if(len(a) > len(b)):
		return bytes([x ^ y for (x, y) in zip(a[:len(b)], b)])
	else:
		return bytes([x ^ y for (x, y) in zip(a, b[:len(a)])])

for a in msgs:
	possible_zeros = [0] * len(a)
	for b in msgs:
		if(a == b):
			 continue
		else:
			c = axorb(a, b)
			for k in range(len(c)):
				if(re.match(r'[a-zA-Z]', chr(c[k])) or c[k] == 0):
					possible_zeros[k] += 1

	for i in range(len(a)):
		if(possible_zeros[i] >= (len(msgs) - threshold)):
			key[i] = (a[i] ^ 0x20)


key_in_bytes = bytes([x for x in key])


msg = "".join([chr(x) for x in axorb(key_in_bytes, target)])

print(msg)

try:
	output_file = 'decrypt.txt'
	with open(output_file, 'w') as f:
		f.write(msg);
except:
	print(output_file + ' not found')

